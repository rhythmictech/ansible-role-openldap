# {{ ansible_managed }}
#
include                     /etc/openldap/schema/core.schema
include                     /etc/openldap/schema/cosine.schema
include                     /etc/openldap/schema/inetorgperson.schema
include                     /etc/openldap/schema/rfc2307bis.schema
include                     /etc/openldap/schema/fnet.schema
include                     /etc/openldap/schema/lpk.schema
include                     /etc/openldap/schema/ppolicy.schema
include                     /etc/openldap/schema/sudo.schema
include                     /etc/openldap/schema/samba.schema

modulepath                  /usr/lib64/openldap
moduleload                  ppolicy.la
moduleload                  memberof.la
moduleload                  syncprov.la
{% if not auth[ansible_fqdn].master|default(auth_master) %}
moduleload                  chain.la
{% endif %}

pidfile                     /var/run/openldap/slapd.pid
argsfile                    /var/run/openldap/slapd.args

{% if not auth[ansible_fqdn].master|default(auth_master) %}
## OpenLDAP docs want chaining near the top of the config
overlay chain
chain-uri                   "ldaps://{{ auth_ldap_master }}/"
chain-idassert-bind         bindmethod="simple"
                            binddn="cn=Manager,{{ auth_ldap_basedn }}"
                            credentials="{{ auth_ldap_manager_pw }}"
                            mode="self"
chain-tls                   start
chain-return-error          TRUE
## END of chaining
{% endif %}

TLSCACertificateFile        /etc/openldap/cacerts/cacert.pem
TLSCertificateFile          /etc/pki/tls/certs/{{ ansible_fqdn }}.crt
TLSCertificateKeyFile       /etc/pki/tls/private/{{ ansible_fqdn }}.key
TLSVerifyClient             never

access to attrs=userpassword,sshPublicKey
    by self write
    by group/groupOfUniqueNames/uniqueMember="cn=netadmins,ou=Groups,{{ auth_ldap_basedn }}" manage
    by dn.exact="uid=passwordreset,ou=SpecialUsers,{{ auth_ldap_basedn }}" write
    by * read
access to dn.children="dc=local"
    by self read
    by group/groupOfUniqueNames/uniqueMember="cn=netadmins,ou=Groups,{{ auth_ldap_basedn }}" manage
    by dn.exact="uid=appbind,ou=SpecialUsers,{{ auth_ldap_basedn }}" read
    by dn.exact="uid=repl,ou=SpecialUsers,{{ auth_ldap_basedn }}" read
    by dn.exact="uid=passwordreset,ou=SpecialUsers,{{ auth_ldap_basedn }}" read
access to *
    by group/groupOfUniqueNames/uniqueMember="cn=netadmins,ou=Groups,{{ auth_ldap_basedn }}" manage
    by dn.exact="uid=appbind,ou=SpecialUsers,{{ auth_ldap_basedn }}" read
    by dn.exact="uid=nagios,ou=SpecialUsers,{{ auth_ldap_basedn }}" read
    by dn.exact="uid=repl,ou=SpecialUsers,{{ auth_ldap_basedn }}" read
    by * none

sizelimit                   5000
threads                     8
idletimeout                 14400

# anonymous binds are necessary for top level discover - ACLs prevent deeper querying
#disallow                   bind_anon
#disallow                   bind_simple

database                    bdb
suffix                      "{{ auth_ldap_basedn }}"
rootdn                      "cn=Manager,{{ auth_ldap_basedn }}"
rootpw                      "{{ auth_ldap_manager_pw }}"

directory                   /var/lib/ldap

overlay                     ppolicy
ppolicy_default             "cn=userPasswordPolicy,{{ auth_ldap_basedn }}"
ppolicy_use_lockout
ppolicy_hash_cleartext

overlay memberof
memberof-group-oc           groupOfUniqueNames
memberof-member-ad          uniqueMember

{% if auth[ansible_fqdn].master|default(auth_master) %}
overlay                     syncprov
syncprov-checkpoint         50 5
syncprov-sessionlog         50
{% endif %}

# Indices to maintain for this database
index   objectClass,distinguishedName,entryUUID         eq
index   uid,uidNumber,gidNumber,modifyTimestamp         eq
index   cn,mail,surname,givenname                       eq,subinitial
index   memberOf,uniqueMember                           eq
index   sudoHost,sudoUser                               eq,sub

#log connection activity only
loglevel 16

{% if not auth[ansible_fqdn].master|default(auth_master) %}
syncrepl rid={{ auth[ansible_fqdn]['slave_replid'] }}
    provider=ldaps://{{ auth_ldap_master }}/
    type=refreshAndPersist
    interval=00:00:01:00
    retry="5 5 300 +" 
    searchbase="{{ auth_ldap_basedn }}"
    attrs="*,+"
    bindmethod=simple
    binddn="uid=repl,ou=SpecialUsers,{{ auth_ldap_basedn }}"
    credentials="{{ auth_ldap_repl_pw }}"

updateref                   "ldaps://{{ auth_ldap_master }}/"
{% endif %}

database                    monitor
